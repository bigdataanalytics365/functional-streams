plugins {
    id 'java-library'
    id 'signing'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.9'
}

tasks.withType(JavaCompile) {
    sourceCompatibility = 1.8
    targetCompatibility = 1.8
}

apply plugin: 'java'
apply plugin: 'maven-publish'

ext {
    SL4J_VERSION = '1.7.25'
    JUNIT_VERSION = '4.12'
    LOMBOK_VERSION = '1.18.2'
}

dependencies {
    compile "org.slf4j:slf4j-api:${SL4J_VERSION}"
    compile "org.projectlombok:lombok:${LOMBOK_VERSION}"
    testCompile "org.slf4j:slf4j-simple:${SL4J_VERSION}"
    testCompile "junit:junit:${JUNIT_VERSION}"
}

javadoc {
    failOnError = false
    destinationDir = new File("docs/javadoc")
    options.overview = "src/main/java/overview.html"
}

jar {
    from('COPYING', 'COPYING.LESSER')
    manifest updateManifest()
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
    from('COPYING', 'COPYING.LESSER')
    manifest updateManifest()
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    from('COPYING', 'COPYING.LESSER')
    manifest updateManifest()
}

artifacts {
    archives jar
    archives sourcesJar
    archives javadocJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.name
            from components.java
            artifact sourcesJar
            artifact javadocJar
            pom updatePom()
        }
    }
    repositories {
        maven {
            name = "sonatype"
            def props = rootProject.properties
            credentials {
                username props['repo.sonatype.user']
                password props['repo.sonatype.password']
            }
            def releasesRepoUrl = props['repo.sonatype.snapshots.url']
            def snapshotsRepoUrl = props['repo.sonatype.releases.url']
            url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
        }
    }
}

model {
    tasks.generatePomFileForMavenJavaPublication {
        destination = file("$buildDir/generated-pom.xml")
    }
}

signing {
    sign publishing.publications.mavenJava
}

def updateManifest() {
    return {
        attributes 'Implementation-Title': project.name,
                'Implementation-Version': project.version
    }
}

def updatePom() {
    return {
        name = project.name
        description = project.description
        url = 'https://' + project.url
        def props = rootProject.properties
        licenses {
            license {
                name = props['license.name']
                url = props['license.url']
            }
        }
        developers {
            developer {
                id = 'varunanandrajput'
                name = 'Varun Anand'
                email = 'varunanandrajput@gmail.com'
            }
        }
        scm {
            connection = 'scm:git:git://' + project.url + '.git'
            developerConnection = 'scm:git:ssh://' + project.url + '.git'
            url = 'https://' + project.url + '.git'
        }
    }
}
